@model TCK_FinalProject.Models.customer

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container" style="margin-top: 50px;">
    <div class="row">
        <div class="col-md-8 col-md-offset-2">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h2 class="panel-title">Register Account</h2>
                </div>
                <div class="panel-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                @Html.LabelFor(model => model.customer_name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.customer_name, new { htmlAttributes = new { @class = "form-control" } })
                                   
                                    @Html.ValidationMessageFor(model => model.customer_name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
                                    <div class="text-danger">@ViewData["usernameExists"]</div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                                    <div class="text-danger">@ViewData["enterpassword"]</div>
                                    <div class="text-danger">@ViewData["samepassword"]</div>
                                    <div class="text-danger">@ViewData["passwordComplexity"]</div>
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-2" for="comfirmpassword">Confirm Password:</label>
                                <div class="col-md-10">
                                    <input class="form-control" data-val="true" data-val-required="Must enter password to confirm!"
                                           id="confirmpassword" name="confirmpassword" type="password" value="" aria-describedby="confirmpassword-error" aria-invalid="true">
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                                    <div class="text-danger">@ViewData["emailExists"]</div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.numberphone, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.numberphone, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.numberphone, "", new { @class = "text-danger" })
                                    <div class="text-danger">@ViewData["phoneNumberExists"]</div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.dob, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.dob, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.dob, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

